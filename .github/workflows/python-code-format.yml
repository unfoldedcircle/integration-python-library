name: Check Python code formatting

on:
  push:
    paths:
      - 'ucapi/**'
      - 'requirements.txt'
      - 'test-requirements.txt'
      - 'tests/**'
      - '.github/**/*.yml'
      - 'pyproject.toml'
      - '*.cfg'
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-22.04

    name: Check Python code formatting
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
      - name: Analyzing the code with pylint
        run: |
          python -m pylint ucapi
      - name: Lint with flake8
        run: |
          python -m flake8 ucapi --count --show-source --statistics
      - name: Check code formatting with isort
        run: |
          python -m isort ucapi/. --check --verbose
      - name: Check code formatting with black
        run: |
          python -m black ucapi --check --verbose --line-length 120
